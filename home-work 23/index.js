/**
 * build-icons.js
 * –í–∏–∫–æ–Ω—É—î 2 –∑–∞–≤–¥–∞–Ω–Ω—è:
 * 1. –û–ø—Ç–∏–º—ñ–∑—É—î –≤—Å—ñ SVG —á–µ—Ä–µ–∑ SVGO (–∞–Ω–∞–ª–æ–≥ SVGOMG)
 * 2. –ó–±–∏—Ä–∞—î –≤—Å—ñ SVG –≤ –æ–¥–∏–Ω symboldefs.svg (—è–∫ IconMoon)
 */

import fs from "fs";
import path from "path";
import { optimize } from "svgo";

// === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ===
const SRC_DIR = "./svg";             // –ü–∞–ø–∫–∞ –∑ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–º–∏ SVG
const OUT_DIR = "./optimized-icons"; // –ü–∞–ø–∫–∞ –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
const OUT_FILE = "./symboldefs.svg"; // –§—ñ–Ω–∞–ª—å–Ω–∏–π —Ñ–∞–π–ª

// === –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ SVG ===
if (!fs.existsSync(SRC_DIR)) {
    console.error(`‚ùå –ü–∞–ø–∫–∞ ${SRC_DIR} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!`);
    process.exit(1);
}
if (!fs.existsSync(OUT_DIR)) fs.mkdirSync(OUT_DIR);

// === –ù–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è —ñ–º–µ–Ω —Ñ–∞–π–ª—ñ–≤ ===
function slugify(name) {
    const base = path.basename(name, ".svg");
    const normalized = base
        .normalize("NFD")
        .replace(/[^a-zA-Z0-9]+/g, "-")
        .toLowerCase()
        .replace(/^-+|-+$/g, "");
    return normalized || "icon";
}

// === –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó (–∞–Ω–∞–ª–æ–≥ SVGOMG) ===
const svgoConfig = {
    multipass: true,
    plugins: [
        {
            name: "preset-default",
            params: {
                overrides: {
                    cleanupIds: false,
                    removeViewBox: false,
                },
            },
        },
        "removeDimensions",
    ],
};

// === –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ ===
const files = fs.readdirSync(SRC_DIR).filter(f => f.endsWith(".svg"));
let sprite = `<svg xmlns="http://www.w3.org/2000/svg" style="display:none"><defs>\n`;

for (const file of files) {
    const srcPath = path.join(SRC_DIR, file);
    const raw = fs.readFileSync(srcPath, "utf8");

    // 1. –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è SVG
    const optimized = optimize(raw, { path: srcPath, ...svgoConfig }).data;

    // 2. –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–æ–ª—å–æ—Ä–∏, —Ä–æ–±–∏–º–æ currentColor
    const recolored = optimized
        .replace(/(fill|stroke)=["'](?!none)[^"']+["']/gi, '$1="currentColor"')
        .replace(/style="[^"]*"/gi, (m) =>
            m.replace(/(fill|stroke):([^;]+);?/gi, "$1:currentColor;")
        );

    // 3. –ù–æ–≤–µ —ñ–º‚Äô—è —Ñ–∞–π–ª—É
    const newName = slugify(file) + ".svg";
    const outPath = path.join(OUT_DIR, newName);
    fs.writeFileSync(outPath, recolored, "utf8");

    // 4. –í–∏—Ä—ñ–∑–∞—î–º–æ –≤–º—ñ—Å—Ç —ñ–∫–æ–Ω–∫–∏ –±–µ–∑ <svg> –æ–±–≥–æ—Ä—Ç–∫–∏
    const inner = recolored
        .replace(/<\?xml[^>]*>/g, "")
        .replace(/<!DOCTYPE[^>]*>/g, "")
        .replace(/<svg[^>]*>/i, "")
        .replace(/<\/svg>/i, "");

    // 5. –î–æ–¥–∞—î–º–æ –¥–æ symboldefs.svg
    sprite += `  <symbol id="${slugify(file)}" viewBox="0 0 24 24">\n${inner}\n  </symbol>\n`;
    console.log(`‚úÖ ${file} ‚Üí ${newName}`);
}

sprite += "</defs></svg>";
fs.writeFileSync(OUT_FILE, sprite, "utf8");

console.log("\nüéâ –ì–æ—Ç–æ–≤–æ!");
console.log(`‚û°Ô∏è –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω—ñ SVG: ${OUT_DIR}`);
console.log(`‚û°Ô∏è –§–∞–π–ª —Å–∏–º–≤–æ–ª—ñ–≤: ${OUT_FILE}`);
